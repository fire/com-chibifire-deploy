apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: zeppelin
spec:
  serviceName: "zeppelin"
  replicas: 1
  template:
    metadata:
      labels:
        type: zeppelin
        app: snappydata
    spec:
      containers:
        - name: zeppelin
          env:
          - name: ZEPPELIN_PORT
            value: "8080"
          - name: ZEPPELIN_WAR_TEMPDIR
            value: "/opt/zeppelin/run/temp"
          image: ifire/zeppelin:0.7.3p0
          command:
          - "/bin/bash"
          - "-ecx"
          - |
            export USER_ID=$(id -u) && export GROUP_ID=$(id -g) && envsubst < /opt/zeppelin/passwd > /tmp/passwd && export LD_PRELOAD=/usr/lib64/libnss_wrapper.so && export NSS_WRAPPER_PASSWD=/tmp/passwd && export NSS_WRAPPER_GROUP=/etc/group && /opt/zeppelin/bin/zeppelin.sh --config /opt/zeppelin/config/
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: 100m
          volumeMounts:
          - name: logdir
            mountPath: /opt/zeppelin/logs/
          - name: rundir
            mountPath: /opt/zeppelin/run/
          - name: notebookdir
            mountPath: /opt/zeppelin/notebook/
          - name: configdir
            mountPath: /opt/zeppelin/config/
  volumeClaimTemplates:
  - metadata:
      name: logdir
      annotations:
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: rundir
      annotations:
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: notebookdir
      annotations:
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: 1Gi
  - metadata:
      name: configdir
      annotations:
    spec:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: 1Gi
